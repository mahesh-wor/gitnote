#!/bin/bash
clear
# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow

# Bold Colors
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow

Def='\e[39m'

setup (){
echo -e "$Red Since This Program relies on GitHub Repository; Please create a blank Repository "
echo "for GitNote before Executing this setup.sh $Def"
sleep 1
echo -en "$Def Have You made an empty repository on github? (y/n): "
read choice
if [ "$choice" == "n" ]
then
exit 0;
else
echo " "
fi
echo Making Working Directory $HOME/.gitnote.
mkdir $HOME/.gitnote;
echo -n "Your Git User-Name : "
read uname
echo -n "Give The Repo a Name : "
read repo_name
gitrepo=https://github.com/$uname/$repo_name
echo "Cloning git Repository Locally"
sleep .5
cd $HOME/.gitnote/
git clone $gitrepo 
cd $repo_name
echo repo_name=$repo_name >$HOME/.note_config
echo gitrepo=https://github.com/$uname/$repo_name >>$HOME/.note_config
echo "Please Edit $HOME/note_config for Further Edit"
echo salt=norovni_12 >>$HOME/.note_config
echo protocol=sha1sum >>$HOME/.note_config
echo dire=$HOME/.gitnote >> $HOME/.note_config
echo cipher=-aes-256-cbc >>$HOME/.note_config
echo key=norovni_12 >>$HOME/.note_config
}

if [ -e $HOME/.gitnote/$repo_name ];
then 
echo
echo -e "$BRed GitNote: Starting... $Def " 
else
setup
fi
source $HOME/.note_config
if [ -e $HOME/.gitnote/$repo_name/Notes ];
then 
echo
else
echo "Note Folder Not Found"
echo "Creating Note Folder ...."
mkdir $HOME/.gitnote/$repo_name/Notes
fi

menu () {
echo -e "$BYellow GITNOTE$Def"
echo -e "$BRed Options: $Def "
echo -e "\t\t --free   : Allows you to Freely Edit and Use Commands"
echo -e "\t\t --list   : Lists Avaliable Notes"
echo -e "\t\t --delete : Delete a Note"  
echo -e "\t\t --add    : Add a Note"
echo -e "\t\t --sync   : Syncs with Github"
echo -e " \t\t$BRed Use With These Options $Def"
}

menu

show_notes (){
echo -e "$BRed Your Notes$Def"
ls -l $dire/$repo_name/Notes | awk '{print $9}'
}
echo 
echo

note_encrypt (){
openssl enc $cipher -salt -in /tmp/$1 -out $dire/$repo_name/Notes/$1 -k $key 2>/dev/null
rm -rf /tmp/$1 2>/dev/null
echo -e "$RRed Encrypted";
}

note_decrypt (){
if [ -f $dire/$repo_name/Notes/$title ];
then
openssl enc $cipher -d -in $dire/$repo_name/Notes/$1 -out /tmp/$1 -k $key 
echo -e "$RRed Decrypted";
sleep 1;
echo -n " " ; cat /tmp/$1 2>/dev/null
rm -rf /tmp/$1
else
echo " File Not Found"
fi
}

add_note (){
echo -ne "$BRed Note Title : $Def"
read title
echo -en "$BRed Note Body : $Def"
read body
echo  $body > /tmp/$title
note_encrypt $title 
}

read_note (){
echo -ne "$BRed Note Title : $Def"
read title
note_decrypt $title;
}

git_sync (){
cd $dire/$repo_name/
git add .
git commit -m "Note Sync"
git push origin master  2>/dev/null
echo Sync Done..
}

note_delete (){
echo -en "Title Of Note To Delete: "
read title
rm -rf $HOME/.gitnote/$repo_name/Notes/$title
echo "$title Deleted"
}

while (( $# ))	
do
if [ $1 == '--free' ]
then
xdg-open $HOME/.gitnote/$repo_name/Notes/
break
elif [ $1 == '--list' ]
then
show_notes
break

elif [ $1 == '--delete' ]
then
note_delete
break
elif [ $1 == '--add' ]
then
add_note
break
elif [ $1 == '--sync' ]
then
git_sync
break
elif [ $1 == '--exit' ]
then
exit 0;
fi
done
echo

